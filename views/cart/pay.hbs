<link rel='stylesheet' href='/stylesheets/payment.css' />
<script type="text/javascript" src="https://sandbox.web.squarecdn.com/v1/square.js"></script>

<script>
  const appId = 'sandbox-sq0idb-i20LMvpR3vpW8yTtZPb_LQ';
  const locationId = 'LHVG8FJDDEFK7';

  async function initializeCard(payments) {
    console.log("Initializing Card");
    const card = await payments.card();
    await card.attach('#card-container');

    return card;
  }

  async function createPayment(token) {
    console.log("Sending Payment");
    const body = JSON.stringify({
      locationId,
      sourceId: token,
    });

    const paymentResponse = await fetch('/payment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body,
    });

    if (paymentResponse.ok) {
      return paymentResponse.json();
    }

    const errorBody = await paymentResponse.text();
    throw new Error(errorBody);
  }

  async function tokenize(paymentMethod) {
    console.log("Tokenizing Payment Method");
    const tokenResult = await paymentMethod.tokenize();
    if (tokenResult.status === 'OK') {
      return tokenResult.token;
    } else {
      let errorMessage = `Tokenization failed with status: ${tokenResult.status}`;
      if (tokenResult.errors) {
        errorMessage += ` and errors: ${JSON.stringify(
          tokenResult.errors
        )}`;
      }
      throw new Error(errorMessage);
    }
  }

  // status is either SUCCESS or FAILURE;
  function displayPaymentResults(status, data) {
    console.log("success | " +  JSON.stringify(data));
    const statusContainer = document.getElementById(
      'payment-status-container'
    );
    if (status === 'SUCCESS') {
      statusContainer.classList.remove('is-failure');
      statusContainer.classList.add('is-success');
      //window.location.href = "/success";

    } else {
      statusContainer.classList.remove('is-success');
      statusContainer.classList.add('is-failure');
    }
    statusContainer.style.visibility = 'visible';
  }

  document.addEventListener('DOMContentLoaded', async function () {
    if (!window.Square) {
      throw new Error('Square.js failed to load properly');
    }

    let payments;
    try {
      payments = window.Square.payments(appId, locationId);
    } catch {
      const statusContainer = document.getElementById(
        'payment-status-container'
      );
      statusContainer.className = 'missing-credentials';
      statusContainer.style.visibility = 'visible';
      return;
    }

    let card;
    try {
      card = await initializeCard(payments);
    } catch (e) {
      console.error('Initializing Card failed', e);
      return;
    }

    // Checkpoint 2.
    async function handlePaymentMethodSubmission(event, paymentMethod) {
      console.log("handlePaymentMethodSubmission");
      event.preventDefault();

      try {
        // disable the submit button as we await tokenization and make a payment request.
        cardButton.disabled = true;
        const token = await tokenize(paymentMethod);
        const paymentResults = await createPayment(token);
        console.log("paymentResults : " + paymentResults.payment.orderId);
        displayPaymentResults('SUCCESS');

        console.debug('Payment Success', paymentResults);
      } catch (e) {
        cardButton.disabled = false;
        displayPaymentResults('FAILURE');
        console.error(e.message);
      }
    }

    const cardButton = document.getElementById('card-button');
    cardButton.addEventListener('click', async function (event) {
      await handlePaymentMethodSubmission(event, card);
    });
  });
</script>
<div class="container nopadding">
    <section clas="col-lg-8 col-md-10 ">
        <h1 class="display-4 ps-2 text-left" style="line-height: 1">
            Payment
        </h1>
    </section>
</div>
<form id="payment-form">
    <div id="card-container"></div>
    <button id="card-button" type="button">Pay Now</button>
</form>
<div id="payment-status-container"></div>